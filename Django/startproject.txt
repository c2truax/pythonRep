django-admin startproject main

rename parent main to name of project

cd {name of project}

mkdir apps

cd apps

touch __init__.py

python ../manage.py startapp {name of app}

edit settings.py inside the INSTALLED_APPS section add 'apps.{name of app}',

edit urls.py in your main folder append to import 'include' 
and point the urlpatterns to {
    url(r'^', include('apps.{name of app}.urls')),
}

cd apps/{name of app}
touch urls.py

edit the recently created urls.py and add {
from django.conf.urls import url
from . import views
urlpatterns = [
    url(r'^$', views.index)
]
}

also edit the views.py to be{

from django.shortcuts import render, HttpResponse, redirect

def index(request):
    response = "Hello, I am your first request!"
    return HttpResponse(response)

}

# Need to be in same directory as manage.py file
  > python manage.py makemigrations
  > python manage.py migrate

go to where manage.py is and type the following to run your server...
python manage.py runserver


Key Terms
request.POST
Data from POST request
request.GET
Data from GET request
request.method
Returns the method/HTTP verb associated with the request
{% csrf_token %}
Prevents cross-site request forgery (place it in a form on the HTML/template side of your project)

Session:
request.session['name'] = request.POST['name']
request.session['counter'] = 100
with in HTML -- {{request.session.name}}
Useful session methods:
request.session['key']
This will retrieve (get) the value stored in key
request.session['key'] = 'value'
Set the value that will be stored by key
del request.session['key']
Deletes a session key if it exists, throws a keyError if it doesn’t. Use along with try and except since it’s better to ask for forgiveness than permission
'key' in request.session
Returns a boolean of whether a key is in session or not
{{ request.session.name }}
Use dot notation (.) to access request.session keys from templates since square brackets ([]) aren’t allowed there